<%- include('./partials/header') %>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-4 border-bottom">
    <h1 class="h2">Pengujian API</h1>
</div>

<div class="row">
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="apiTestTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="create-tab" data-bs-toggle="tab" data-bs-target="#create-tab-pane" type="button" role="tab">Buat Transaksi</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="update-tab" data-bs-toggle="tab" data-bs-target="#update-tab-pane" type="button" role="tab">Update Transaksi</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="list-tab" data-bs-toggle="tab" data-bs-target="#list-tab-pane" type="button" role="tab">List Metode</button>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="apiTestTabContent">
                    <div class="tab-pane fade show active" id="create-tab-pane" role="tabpanel">
                        <form id="create-testing-form">
                            <input type="hidden" id="csrf-token" value="<%= csrfToken %>">
                            <div class="mb-3">
                                <label for="apiKey" class="form-label">API Key Anda</label>
                                <input type="text" id="apiKey" class="form-control" value="<%= user.apiKey %>" readonly>
                            </div>
                            <div class="mb-3">
                                <label for="endpoint" class="form-label">Endpoint</label>
                                <select id="endpoint" class="form-select">
                                    <option value="/payment/qris">QRIS (/payment/qris)</option>
                                    <option value="/payment/ewallet">E-Wallet (/payment/ewallet)</option>
                                    <option value="/payment/bank">Bank (/payment/bank)</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="amount" class="form-label">Jumlah (Base Amount)</label>
                                <input type="number" id="amount" class="form-control" placeholder="Contoh: 10000" required>
                            </div>
                            <div class="mb-3" id="payment-method-container">
                                <label for="paymentMethod" class="form-label">Metode Pembayaran (ID)</label>
                                <select id="paymentMethod" class="form-select">
                                   <% user.paymentMethods.filter(m => m.isEnabled).forEach(method => { %>
                                        <option value="<%= method.id %>" data-category="<%= method.category %>"><%= method.name %> (<%= method.id %>)</option>
                                   <% }) %>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary">Kirim Request</button>
                        </form>
                    </div>

                    <div class="tab-pane fade" id="update-tab-pane" role="tabpanel">
                        <form id="update-testing-form">
                            <div class="mb-3">
                                <label class="form-label">API Key Anda</label>
                                <input type="text" class="form-control" value="<%= user.apiKey %>" readonly>
                            </div>
                            <div class="mb-3">
                                <label for="update-endpoint" class="form-label">Endpoint</label>
                                <select id="update-endpoint" class="form-select">
                                    <option value="/payment/qris">QRIS (/payment/qris)</option>
                                    <option value="/payment/ewallet">E-Wallet (/payment/ewallet)</option>
                                    <option value="/payment/bank">Bank (/payment/bank)</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="update-app" class="form-label">Nama Aplikasi Notifikasi</label>
                                <input type="text" id="update-app" class="form-control" value="Test Update Via Web" placeholder="Test Update Via Web" readonly>
                            </div>
                             <div class="mb-3">
                                <label for="update-notification" class="form-label">Isi Notifikasi</label>
                                <textarea id="update-notification" class="form-control" rows="3" placeholder="Contoh: Anda menerima pembayaran sebesar Rp 10.123 pada tanggal ..."></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Kirim Request</button>
                        </form>
                    </div>

                    <div class="tab-pane fade" id="list-tab-pane" role="tabpanel">
                        <form id="list-testing-form">
                            <p>Klik tombol di bawah untuk meminta daftar metode pembayaran yang terkait dengan API Key Anda.</p>
                             <div class="mb-3">
                                <label class="form-label">API Key Anda</label>
                                <input type="text" class="form-control" value="<%= user.apiKey %>" readonly>
                            </div>
                            <button type="submit" class="btn btn-primary">Test /payment/list</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 mt-4 mt-lg-0">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Request & Response</h5>
                <div id="spinner" class="spinner-border spinner-border-sm d-none" role="status"></div>
            </div>
            <div class="card-body">
                <h6>Request Body:</h6>
                <pre><code id="request-preview" class="json bg-light p-2 rounded"></code></pre>
                <h6 class="mt-4">Response:</h6>
                <pre><code id="response-preview" class="json bg-light p-2 rounded"></code></pre>
            </div>
        </div>
    </div>
</div>

<style>
    #request-preview, #response-preview {
        white-space: pre-wrap;
        word-break: break-all;
    }
</style>

<%- include('./partials/footer') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // ... (Elemen umum dan fungsi handleApiRequest tidak berubah) ...
    const csrfToken = document.getElementById('csrf-token').value;
    const apiKey = document.getElementById('apiKey').value;
    const requestPreview = document.getElementById('request-preview');
    const responsePreview = document.getElementById('response-preview');
    const spinner = document.getElementById('spinner');
    const createForm = document.getElementById('create-testing-form');
    const endpointSelect = document.getElementById('endpoint');
    const paymentMethodSelect = document.getElementById('paymentMethod');
    const updateForm = document.getElementById('update-testing-form');
    const listForm = document.getElementById('list-testing-form');

    async function handleApiRequest(endpoint, body) {
        spinner.classList.remove('d-none');
        responsePreview.textContent = 'Mengirim...';
        requestPreview.textContent = JSON.stringify(body, null, 2);
        try {
            const response = await fetch(endpoint, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'CSRF-Token': csrfToken
                },
                body: JSON.stringify(body)
            });
            const data = await response.json();
            responsePreview.textContent = JSON.stringify(data, null, 2);
        } catch (error) {
            responsePreview.textContent = JSON.stringify({ success: false, message: error.message }, null, 2);
        } finally {
            spinner.classList.add('d-none');
        }
    }

    // --- PERUBAHAN LOGIKA PADA CREATE FORM ---
    function filterPaymentMethods() {
        const endpoint = endpointSelect.value;
        let category;

        // Tentukan kategori berdasarkan endpoint yang dipilih
        if (endpoint.includes('qris')) {
            category = 'QRIS';
        } else if (endpoint.includes('ewallet')) {
            category = 'Ewallet';
        } else {
            category = 'Bank';
        }
        
        let firstVisibleOption = null;
        // Loop melalui semua opsi dan tampilkan/sembunyikan berdasarkan kategori
        Array.from(paymentMethodSelect.options).forEach(option => {
            if (option.dataset.category === category) {
                option.style.display = 'block';
                if (!firstVisibleOption) {
                    firstVisibleOption = option; // Simpan opsi pertama yang terlihat
                }
            } else {
                option.style.display = 'none';
            }
        });

        // Secara otomatis pilih opsi pertama yang terlihat untuk kategori yang dipilih
        if (firstVisibleOption) {
            firstVisibleOption.selected = true;
        }
    }
    
    endpointSelect.addEventListener('change', filterPaymentMethods);
    filterPaymentMethods(); // Panggil saat halaman dimuat
    
    createForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const endpoint = endpointSelect.value;
        // Body sekarang selalu menyertakan paymentMethod
        const body = {
            action: "create",
            apikey: apiKey,
            amount: parseInt(document.getElementById('amount').value),
            paymentMethod: paymentMethodSelect.value
        };
        await handleApiRequest(endpoint, body);
    });

    // --- UPDATE & LIST FORM LOGIC (Tidak Berubah) ---
    updateForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const endpoint = document.getElementById('update-endpoint').value;
        const body = {
            action: "update",
            apikey: apiKey,
            app: document.getElementById('update-app').value,
            notification: document.getElementById('update-notification').value
        };
        await handleApiRequest(endpoint, body);
    });
    listForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const endpoint = '/payment/list';
        const body = {
            apikey: apiKey,
        };
        await handleApiRequest(endpoint, body);
    });
});
</script>