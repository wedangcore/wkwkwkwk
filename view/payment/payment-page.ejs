<!DOCTYPE html>
<html lang="id" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %> - <%= merchant.name || 'Merchant' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Be Vietnam Pro', sans-serif;
        }
        .payment-card {
            max-width: 450px;
            border: none;
            border-radius: 1rem;
            background-color: rgba(255, 255, 255, 0.85);
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.1);
        }
        .logo { max-height: 40px; }
        .qr-code {
            max-width: 100%;
            height: auto;
            max-height: 280px;
            border-radius: 0.75rem;
        }
        .countdown-timer {
            font-size: 1.2rem;
            background-color: #ffebe_c;
            color: #_b85c_0_0;
            padding: 0.25rem 0.75rem;
            border-radius: 2rem;
        }
        .status-icon {
            font-size: 5rem;
            animation: pop-in 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
        }
        @keyframes pop-in {
            0% { transform: scale(0.5); opacity: 0; }
            100% { transform: scale(1); opacity: 1; }
        }
        .payment-details-box {
            background-color: #f8f9fa;
            border: 1px dashed #dee2e6;
            border-radius: 0.75rem;
        }
        .copy-btn {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100 py-4">
        <div class="card shadow-sm payment-card w-100">
            <div class="card-header text-center p-3 bg-transparent border-0">
                <% if (merchant.logoUrl) { %>
                    <img src="<%= merchant.logoUrl %>" alt="<%= merchant.name %> Logo" class="logo mb-2">
                <% } %>
                <h5 class="mb-0"><%= merchant.name || 'Laman Pembayaran' %></h5>
            </div>

            <div class="card-body p-4" id="payment-pending">
                <div class="text-center">
                    <p class="text-muted mb-1">Total Pembayaran</p>
                    <h2 class="fw-bold mb-2">
                         <%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }).format(transaction.amount) %>
                    </h2>
                    <p class="text-muted small">ID Transaksi: <code><%= transaction.transactionId %></code></p>
                    <hr class="my-3">
                    <p class="mb-3">Batas Waktu Pembayaran: <span id="countdown" class="fw-bold countdown-timer"></span></p>

                    <% if (transaction.qr_url) { %>
                        <p class="mb-2">Silakan pindai Kode QRIS di bawah ini:</p>
                        <img src="<%= transaction.qr_url %>" alt="QRIS Code" class="qr-code img-fluid border">
                        <p class="mt-3 fw-bold small text-muted">Menggunakan <%= transaction.paymentMethod.toUpperCase() %></p>
                    <% } else { %>
                        <p class="mb-3">Silakan transfer ke nomor rekening berikut:</p>
                        <div class="payment-details-box p-3 text-start">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="fw-bold"><%= paymentMethods.find(p => p.id === transaction.paymentMethod)?.name || transaction.paymentMethod.toUpperCase() %></span>
                                <% if (paymentMethods.find(p => p.id === transaction.paymentMethod)?.iconUrl) { %>
                                    <img src="<%= paymentMethods.find(p => p.id === transaction.paymentMethod)?.iconUrl %>" style="max-height: 20px;">
                                <% } %>
                            </div>
                            <h4 class="mb-1 fw-bold" id="accountNumber"><%= paymentMethods.find(p => p.id === transaction.paymentMethod)?.accountNumber %>
                                <i class="bi bi-clipboard ms-2 copy-btn" onclick="copyToClipboard('<%= paymentMethods.find(p => p.id === transaction.paymentMethod)?.accountNumber %>', this)"></i>
                            </h4>
                            <small class="text-muted">a/n <%= paymentMethods.find(p => p.id === transaction.paymentMethod)?.accountName %></small>
                        </div>
                        <div class="alert alert-warning mt-3 small">
                            <strong>PENTING:</strong> Pastikan Anda mentransfer dengan jumlah yang **sama persis** agar pembayaran dapat diverifikasi secara otomatis.
                        </div>
                    <% } %>
                </div>
            </div>

            <div class="card-body p-5 text-center d-none" id="payment-success">
                <i class="bi bi-check-circle-fill text-success status-icon"></i>
                <h3 class="mt-4">Pembayaran Berhasil!</h3>
                <p class="text-muted">Terima kasih, pembayaran Anda telah kami terima.</p>
                <p class="text-muted small">ID Transaksi: <code><%= transaction.transactionId %></code></p>
            </div>

            <div class="card-body p-5 text-center d-none" id="payment-failed">
                <i class="bi bi-x-circle-fill text-danger status-icon"></i>
                <h3 class="mt-4">Pembayaran Gagal</h3>
                <p class="text-muted">Waktu pembayaran telah habis. Silakan buat transaksi baru.</p>
            </div>

            <div class="card-footer text-center text-muted small bg-transparent border-0">
                Powered by MyGateway
            </div>
        </div>
    </div>

    <script>
        const expiredAt = new Date('<%= transaction.expiredAt %>');
        const countdownEl = document.getElementById('countdown');
        const pendingView = document.getElementById('payment-pending');
        const successView = document.getElementById('payment-success');
        const failedView = document.getElementById('payment-failed');

        function updateCountdown() {
            const diff = expiredAt - new Date();
            if (diff <= 0) {
                if(countdownEl) countdownEl.textContent = "00:00";
                return;
            }
            const minutes = Math.floor((diff / 1000 / 60) % 60).toString().padStart(2, '0');
            const seconds = Math.floor((diff / 1000) % 60).toString().padStart(2, '0');
            if(countdownEl) countdownEl.textContent = `${minutes}:${seconds}`;
        }
        
        const encryptedId = window.location.pathname.split('/').pop();
        
        async function checkStatus() {
            try {
                const response = await fetch(`/payment/status/${encryptedId}`);
                const data = await response.json();
                if (data.success) {
                    if (data.status === 'sukses') {
                        pendingView.classList.add('d-none');
                        successView.classList.remove('d-none');
                        failedView.classList.add('d-none');
                        clearInterval(countdownInterval);
                        clearInterval(statusInterval);
                    } else if (data.status === 'gagal') {
                        pendingView.classList.add('d-none');
                        successView.classList.add('d-none');
                        failedView.classList.remove('d-none');
                        clearInterval(countdownInterval);
                        clearInterval(statusInterval);
                    }
                }
            } catch (error) {
                console.error("Error checking status:", error);
            }
        }

        function copyToClipboard(text, element) {
            navigator.clipboard.writeText(text).then(() => {
                const originalIcon = element.className;
                element.className = 'bi bi-clipboard-check-fill ms-2 text-success';
                setTimeout(() => {
                    element.className = originalIcon;
                }, 1500);
            });
        }
        
        updateCountdown();
        const countdownInterval = setInterval(updateCountdown, 1000);
        const statusInterval = setInterval(checkStatus, 4000);
        
        checkStatus();
    </script>
</body>
</html>